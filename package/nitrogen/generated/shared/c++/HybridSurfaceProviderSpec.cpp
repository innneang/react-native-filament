///
/// HybridSurfaceProviderSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#include "HybridSurfaceProviderSpec.hpp"

namespace margelo::nitro::RNF {

  void HybridSurfaceProviderSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridMethod("getSurface", &HybridSurfaceProviderSpec::getSurface);
      prototype.registerHybridMethod("addOnSurfaceCreatedListener", &HybridSurfaceProviderSpec::addOnSurfaceCreatedListener);
      prototype.registerHybridMethod("addOnSurfaceDestroyedListener", &HybridSurfaceProviderSpec::addOnSurfaceDestroyedListener);
    });
  }

} // namespace margelo::nitro::RNF
