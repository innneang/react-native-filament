///
/// HybridCameraManipulatorSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#include "HybridCameraManipulatorSpec.hpp"

namespace margelo::nitro::RNF {

  void HybridCameraManipulatorSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    HybridPointerHolderSpec::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridMethod("scroll", &HybridCameraManipulatorSpec::scroll);
      prototype.registerHybridMethod("update", &HybridCameraManipulatorSpec::update);
      prototype.registerHybridMethod("grabBegin", &HybridCameraManipulatorSpec::grabBegin);
      prototype.registerHybridMethod("grabUpdate", &HybridCameraManipulatorSpec::grabUpdate);
      prototype.registerHybridMethod("grabEnd", &HybridCameraManipulatorSpec::grabEnd);
      prototype.registerHybridMethod("getLookAt", &HybridCameraManipulatorSpec::getLookAt);
    });
  }

} // namespace margelo::nitro::RNF
