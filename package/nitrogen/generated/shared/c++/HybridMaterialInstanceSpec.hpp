///
/// HybridMaterialInstanceSpec.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#if __has_include(<NitroModules/HybridObject.hpp>)
#include <NitroModules/HybridObject.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif

// Forward declaration of `CullingMode` to properly resolve imports.
namespace margelo::nitro::RNF { enum class CullingMode; }
// Forward declaration of `TransparencyMode` to properly resolve imports.
namespace margelo::nitro::RNF { enum class TransparencyMode; }

#include <string>
#include "CullingMode.hpp"
#include "TransparencyMode.hpp"
#include <tuple>

namespace margelo::nitro::RNF {

  using namespace margelo::nitro;

  /**
   * An abstract base class for `MaterialInstance`
   * Inherit this class to create instances of `HybridMaterialInstanceSpec` in C++.
   * You must explicitly call `HybridObject`'s constructor yourself, because it is virtual.
   * @example
   * ```cpp
   * class HybridMaterialInstance: public HybridMaterialInstanceSpec {
   * public:
   *   HybridMaterialInstance(...): HybridObject(TAG) { ... }
   *   // ...
   * };
   * ```
   */
  class HybridMaterialInstanceSpec: public virtual HybridObject {
    public:
      // Constructor
      explicit HybridMaterialInstanceSpec(): HybridObject(TAG) { }

      // Destructor
      virtual ~HybridMaterialInstanceSpec() { }

    public:
      // Properties
      virtual std::string getName() = 0;

    public:
      // Methods
      virtual void setCullingMode(CullingMode mode) = 0;
      virtual void setTransparencyMode(TransparencyMode mode) = 0;
      virtual void changeAlpha(double alpha) = 0;
      virtual void setFloatParameter(const std::string& name, double value) = 0;
      virtual void setIntParameter(const std::string& name, double value) = 0;
      virtual void setMat3fParameter(const std::string& name, const std::tuple<double, double, double, double, double, double, double, double, double>& value) = 0;
      virtual void setFloat3Parameter(const std::string& name, const std::tuple<double, double, double>& vector) = 0;
      virtual void setFloat4Parameter(const std::string& name, const std::tuple<double, double, double, double>& vector) = 0;
      virtual double getFloatParameter(const std::string& name) = 0;
      virtual double getIntParameter(const std::string& name) = 0;
      virtual std::tuple<double, double, double, double, double, double, double, double, double> getMat3fParameter(const std::string& name) = 0;
      virtual std::tuple<double, double, double> getFloat3Parameter(const std::string& name) = 0;
      virtual std::tuple<double, double, double, double> getFloat4Parameter(const std::string& name) = 0;

    protected:
      // Hybrid Setup
      void loadHybridMethods() override;

    protected:
      // Tag for logging
      static constexpr auto TAG = "MaterialInstance";
  };

} // namespace margelo::nitro::RNF
