///
/// HybridBulletAPISpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#include "HybridBulletAPISpec.hpp"

namespace margelo::nitro::RNF {

  void HybridBulletAPISpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridMethod("createDiscreteDynamicWorld", &HybridBulletAPISpec::createDiscreteDynamicWorld);
      prototype.registerHybridMethod("createBoxShape", &HybridBulletAPISpec::createBoxShape);
      prototype.registerHybridMethod("createCylinderShape", &HybridBulletAPISpec::createCylinderShape);
      prototype.registerHybridMethod("createCylinderShapeX", &HybridBulletAPISpec::createCylinderShapeX);
      prototype.registerHybridMethod("createCylinderShapeZ", &HybridBulletAPISpec::createCylinderShapeZ);
      prototype.registerHybridMethod("createStaticPlaneShape", &HybridBulletAPISpec::createStaticPlaneShape);
      prototype.registerHybridMethod("createSphereShape", &HybridBulletAPISpec::createSphereShape);
      prototype.registerHybridMethod("createRigidBody", &HybridBulletAPISpec::createRigidBody);
      prototype.registerHybridMethod("createRigidBodyFromTransform", &HybridBulletAPISpec::createRigidBodyFromTransform);
    });
  }

} // namespace margelo::nitro::RNF
