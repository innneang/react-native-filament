///
/// HybridFilamentInstanceSpec.hpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#pragma once

#if __has_include(<NitroModules/HybridObject.hpp>)
#include <NitroModules/HybridObject.hpp>
#else
#error NitroModules cannot be found! Are you sure you installed NitroModules properly?
#endif

// Forward declaration of `HybridEntitySpec` to properly resolve imports.
namespace margelo::nitro::RNF { class HybridEntitySpec; }
// Forward declaration of `HybridAnimatorSpec` to properly resolve imports.
namespace margelo::nitro::RNF { class HybridAnimatorSpec; }
// Forward declaration of `HybridNameComponentManagerSpec` to properly resolve imports.
namespace margelo::nitro::RNF { class HybridNameComponentManagerSpec; }
// Forward declaration of `HybridAABBSpec` to properly resolve imports.
namespace margelo::nitro::RNF { class HybridAABBSpec; }

#include <memory>
#include "HybridEntitySpec.hpp"
#include "HybridAnimatorSpec.hpp"
#include "HybridNameComponentManagerSpec.hpp"
#include <vector>
#include "HybridAABBSpec.hpp"

namespace margelo::nitro::RNF {

  using namespace margelo::nitro;

  /**
   * An abstract base class for `FilamentInstance`
   * Inherit this class to create instances of `HybridFilamentInstanceSpec` in C++.
   * You must explicitly call `HybridObject`'s constructor yourself, because it is virtual.
   * @example
   * ```cpp
   * class HybridFilamentInstance: public HybridFilamentInstanceSpec {
   * public:
   *   HybridFilamentInstance(...): HybridObject(TAG) { ... }
   *   // ...
   * };
   * ```
   */
  class HybridFilamentInstanceSpec: public virtual HybridObject {
    public:
      // Constructor
      explicit HybridFilamentInstanceSpec(): HybridObject(TAG) { }

      // Destructor
      virtual ~HybridFilamentInstanceSpec() { }

    public:
      // Properties
      virtual double getEntityCount() = 0;

    public:
      // Methods
      virtual std::shared_ptr<margelo::nitro::RNF::HybridEntitySpec> getRoot() = 0;
      virtual std::shared_ptr<margelo::nitro::RNF::HybridAnimatorSpec> createAnimator(const std::shared_ptr<margelo::nitro::RNF::HybridNameComponentManagerSpec>& nameComponentManager) = 0;
      virtual std::vector<std::shared_ptr<margelo::nitro::RNF::HybridEntitySpec>> getEntities() = 0;
      virtual std::shared_ptr<margelo::nitro::RNF::HybridAABBSpec> getBoundingBox() = 0;

    protected:
      // Hybrid Setup
      void loadHybridMethods() override;

    protected:
      // Tag for logging
      static constexpr auto TAG = "FilamentInstance";
  };

} // namespace margelo::nitro::RNF
