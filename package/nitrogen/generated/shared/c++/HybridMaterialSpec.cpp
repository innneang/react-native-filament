///
/// HybridMaterialSpec.cpp
/// This file was generated by nitrogen. DO NOT MODIFY THIS FILE.
/// https://github.com/mrousavy/nitro
/// Copyright Â© 2024 Marc Rousavy @ Margelo
///

#include "HybridMaterialSpec.hpp"

namespace margelo::nitro::RNF {

  void HybridMaterialSpec::loadHybridMethods() {
    // load base methods/properties
    HybridObject::loadHybridMethods();
    HybridPointerHolderSpec::loadHybridMethods();
    // load custom methods/properties
    registerHybrids(this, [](Prototype& prototype) {
      prototype.registerHybridGetter("name", &HybridMaterialSpec::getName);
      prototype.registerHybridMethod("createInstance", &HybridMaterialSpec::createInstance);
      prototype.registerHybridMethod("getDefaultInstance", &HybridMaterialSpec::getDefaultInstance);
      prototype.registerHybridMethod("setDefaultIntParameter", &HybridMaterialSpec::setDefaultIntParameter);
      prototype.registerHybridMethod("setDefaultFloatParameter", &HybridMaterialSpec::setDefaultFloatParameter);
      prototype.registerHybridMethod("setDefaultTextureParameter", &HybridMaterialSpec::setDefaultTextureParameter);
      prototype.registerHybridMethod("setDefaultMat3fParameter", &HybridMaterialSpec::setDefaultMat3fParameter);
      prototype.registerHybridMethod("setDefaultFloat3Parameter", &HybridMaterialSpec::setDefaultFloat3Parameter);
      prototype.registerHybridMethod("setDefaultFloat4Parameter", &HybridMaterialSpec::setDefaultFloat4Parameter);
    });
  }

} // namespace margelo::nitro::RNF
